/*!
 {{ IMPORT: root, reboot, forms/forms-start }}
 */

.input input,
.input textarea {
    width: 100%;
    height: 3.5rem;
    padding: 1rem 0.82rem 0;
    border-color: transparent;
    border-radius: var(--border-radius, 6px);
    transition: all 0.2s ease-in-out;
    background: transparent;
    border: 0;
    cursor: text;
}

.input input:focus,
.input textarea:focus {
    outline: none;
}

.input label {
    color: var(--text-secondary);
    position: absolute;
    left: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    font-size: 1rem;
    line-height: 1rem;
    transition: 0.3s ease-in-out;
    cursor: text;
    pointer-events: none;
    background-color: transparent;
}

.input._textarea label, .input textarea + label{
    background-color: #fff;
}

.input._hasValue label, .input._focused label {
    top: 0.48rem;
    left: 0.81rem;
    transform: none;
    font-size: 0.8rem;
    font-weight: 500;
    color: var(--text-primary);
    opacity: 0.8;
}

/* Start:: Textarea */
.input textarea {
    height: 4.75rem;
    min-height: 4.75rem;
    max-height: 10rem;
    padding: 1.5rem 0.82rem 0.5rem;
    transition: 0.3s ease-in-out, height 100ms;
    resize: none;
    overflow: hidden;
    /*margin-bottom: -6px; ------------------*/
}

.input textarea[rows] {
    /* .input._noHeight textarea */
    height: auto;
    min-height: 3.5rem;
    max-height: none;
    overflow: auto;
    resize: vertical;
    transition: 0.3s ease-in-out, height 0ms;
}

.input textarea~label {
    top: 1.5rem;
}

/* END:: Textarea */

.input._focused label {
    opacity: 1;
}

.input._focused .input-wrapper::after {
    border-color: var(--primary);
}

.input input::placeholder {color: transparent; opacity: 0; transition: all 0.3s ease-out;}
.input input:-moz-placeholder {color: transparent; opacity: 0; transition: all 0.3s ease-out; }
.input input::-moz-placeholder {color: transparent; opacity: 0; transition: all 0.3s ease-out; }
.input input:-ms-input-placeholder {color: transparent; opacity: 0; transition: all 0.3s ease-out;}
.input input::-webkit-input-placeholder {color: transparent; opacity: 0; transition: all 0.3s ease-out;}

.input._focused input::placeholder {opacity: 0.8; color: var(--text-secondary);}
.input._focused input:-moz-placeholder {opacity: 0.8; color:var(--text-secondary); }
.input._focused input::-moz-placeholder {opacity: 0.8; color:var(--text-secondary); }
.input._focused input:-ms-input-placeholder {opacity: 0.8; color:var(--text-secondary);}
.input._focused input::-webkit-input-placeholder {opacity: 0.8; color:var(--text-secondary);}

/* .input._disabled .input-wrapper, .input._readonly .input-wrapper,
.input._disabled label, .input._readonly label{
    background-color: var(--disabled);
} */

/* .input._disabled input{
    cursor: not-allowed;
}

.input._disabled input, .input._readonly input{
    color: var(--text-secondary);
} */

.input input:disabled,
.input input:read-only,
.input textarea:disabled,
.input textarea:disabled+label,
.input textarea:read-only,
.input textarea:read-only+label {
    background-color: var(--disabled);
}

.input._disabled .input-wrapper {
    background-color: var(--disabled);
}

.input input:disabled,
.input textarea:disabled {
    cursor: not-allowed;
}

.input input:disabled,
.input input:read-only,
.input textarea:disabled,
.input textarea:read-only {
    color: var(--text-secondary);
}

/*
 * Input groups
 */

.input.group .input-wrapper {
    display: flex;
    align-items: center;
}

.input.group .input-wrapper>div {
    flex: 1 1 auto;
}

/* Icons */
.group .input-wrapper>i,
.group .input-wrapper>svg {
    font-size: 1.5rem;
    margin-left: 0.75rem;
}

.group .input-wrapper>div+i,
.group .input-wrapper>div+svg {
    margin-left: 0;
    margin-right: 0.75rem;
}

/* Actions */
.group .input-wrapper>button {
    flex: 0 0 auto;
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: none;
    border-radius: calc(var(--border-radius) - 0.1rem);
    text-decoration: none;
    line-height: 1;
    cursor: pointer;
    text-align: center;
    transition: 250ms ease-in-out;
    -webkit-appearance: none;
    -moz-appearance: none;
    font-size: 1rem;
    box-shadow: none;
    background: transparent;
    outline: none;
    padding: 0.2rem;
    margin-left: calc(1rem - 0.2rem);
    z-index: 1;
}

.group .input-wrapper>button:focus{
    border-radius: calc(var(--border-radius) - 0.25rem);
}

.group .input-wrapper>div+button {
    margin-left: 0;
    margin-right: calc(1rem - 0.2rem);
}

.input.group button:focus {
    box-shadow: 0 0 0 2px var(--background-color), 0 0 0 calc(2px + 2px) var(--outline, #0075ff);
}

/* Error And Success */
.input.valid input,
.input.invalid input {
    background-position: right 0.56rem center;
    background-size: calc(.75em + .375rem) calc(.75em + .375rem);
}

.input.valid input{
    padding-right: 2rem;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2300B74A' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
}

.input.invalid  input {
    padding-right: 2rem;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23F93154'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23F93154' stroke='none'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
}

._textarea.valid:not(.group) .input-wrapper,
._textarea.valid .input-wrapper>div,
._textarea.invalid:not(.group) .input-wrapper,
._textarea.invalid .input-wrapper>div {
    background-position: right 0.5rem top 0.5rem;
    background-size: calc(.75em + .375rem) calc(.75em + .375rem);
}

._textarea.valid:not(.group) .input-wrapper,
._textarea.valid .input-wrapper>div,
._textarea.invalid:not(.group) .input-wrapper,
._textarea.invalid .input-wrapper>div {
    padding-right: 0;
}

.input.valid .input-wrapper::after {
    border-color: var(--success);
}

.input.invalid .input-wrapper::after {
    border-color: var(--danger);
}

.input.valid._focused .input-wrapper::after {
    border-color: var(--success);
}

.input.invalid._focused .input-wrapper::after {
    border-color: var(--danger);
}

/* Help Text */
.input .help {
    margin-top: 0.25rem;
    font-size: 0.8125rem;
    width: 100%;
    color: var(--text-primary);
}

.input.valid .help {
    margin-top: 0.25rem;
    font-size: 0.8125rem;
    width: 100%;
    color: var(--success);
}

.input.invalid .help {
    margin-top: 0.25rem;
    font-size: 0.8125rem;
    width: 100%;
    color: var(--danger);
}

.input .help.on-invalid,
.input .help.on-valid {
    display: none;
}

.input.invalid .help.on-invalid,
.input.valid .help.on-valid {
    display: block;
}


/* START:: Password Input */
.input .password-btn .hide, .input .password-btn[data-show-pass] .show{
    display: none;
}

.input .password-btn[data-show-pass] .hide{
    display: block;
}

.input .password-strength {
    height: 0.1875rem;
    width: 100%;
    position: absolute;
    padding: 0 5px;
    bottom: 3px;
    overflow: hidden;
}

.input .password-strength .strength {
    height: 100%;
    width: 0%;
    border-radius: var(--border-radius, 8px);
}
/* END:: Password Input */